#####################################
# JOBS
#####################################

prepare:
  stage: .pre
  image: registry.papierpain.fr/docker/alpine:latest
  script:
    - echo "VERSION=$(jq -r '.version' web/package.json)" > .env
  artifacts:
    reports:
      dotenv: .env
  except:
    - merge_requests

frontend:
  stage: build
  image: ${CI_DEPENDENCY_PROXY_GROUP_IMAGE_PREFIX}/node:18.15-alpine
  script:
    - cd web
    - npm ci
    - npm run build
  artifacts:
    expire_in: 10 min
    paths:
      - web/build/
  except:
    - merge_requests

docker:
  stage: build
  image: ${CI_DEPENDENCY_PROXY_GROUP_IMAGE_PREFIX}/docker:23.0.1-git
  services:
    - name: ${CI_DEPENDENCY_PROXY_GROUP_IMAGE_PREFIX}/docker:23.0.1-dind
      alias: docker
  variables:
    PLATFORMS: "linux/amd64,linux/arm64"
    DOCKERFILE: ci/Dockerfile
    BUILD_PATH: "."
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker run --privileged --rm tonistiigi/binfmt --install all
    - docker buildx create --use --name multi-arch-builder --driver-opt network=host --driver-opt image=moby/buildkit:v0.10.6
  script:
    - docker buildx build --platform ${PLATFORMS} ${TAGS} -f ${DOCKERFILE} --push ${BUILD_PATH}
  after_script:
    - docker logout
    - docker buildx rm multi-arch-builder
  rules: # Tags de l'image
    - if: $CI_PIPELINE_SOURCE != "merge_request_event" && $VERSION =~ /^[0-9]+\.[0-9]+\.[0-9]+$/
      variables:
        TAGS: -t $CI_REGISTRY_IMAGE:${VERSION} -t $CI_REGISTRY_IMAGE:stable
    - if: $CI_PIPELINE_SOURCE != "merge_request_event" && $VERSION != ""
      variables:
        TAGS: -t $CI_REGISTRY_IMAGE/test:${VERSION}
    - if: $CI_PIPELINE_SOURCE != "merge_request_event" && $CI_COMMIT_REF_NAME == "master"
      variables:
        TAGS: -t $CI_REGISTRY_IMAGE:latest
  needs:
    - job: prepare
      artifacts: true
    - job: frontend
      artifacts: true

deploy-stack:
  extends: .template-deploy-stack
  variables:
    VERSION: "${VERSION}"
    ENVIRONMENT: staging
    DOMAIN: dev.ldapain.papierpain.fr
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  resource_group: ${ENVIRONMENT}
  environment:
    name: ${ENVIRONMENT}
    url: https://${DOMAIN}
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      when: never
    - if: $CI_PIPELINE_SOURCE == "web" && ( $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH || $CI_COMMIT_TAG =~ /^v[0-9]+\.[0-9]+\.[0-9]+$/ )
      variables:
        ENVIRONMENT: production
        DOMAIN: ldapain.papierpain.fr
    - if: $CI_PIPELINE_SOURCE == "web"
      variables:
        ENVIRONMENT: staging
        DOMAIN: dev.ldapain.papierpain.fr
  needs:
    - job: prepare
      artifacts: true
    - job: docker
